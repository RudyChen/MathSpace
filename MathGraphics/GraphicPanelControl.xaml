<UserControl x:Class="MathGraphics.GraphicPanelControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MathGraphics"
             mc:Ignorable="d" 
              xmlns:swc="clr-namespace:System.Windows.Controls;assembly=FrameWorkExtension" 
             d:DesignHeight="300" d:DesignWidth="300" 
             Loaded="UserControl_Loaded" KeyDown="UserControl_KeyDown" KeyUp="UserControl_KeyUp" SizeChanged="UserControl_SizeChanged">
    <UserControl.Resources>

        <VisualBrush x:Key="BackgroundVisualBrush" TileMode="Tile"  ViewportUnits="Absolute" Viewport="0,0,9,9">
            <VisualBrush.Visual>
                <Grid Background="Black">

                    <Ellipse Width="1.1" Height="1.1" Stroke="Transparent" Fill="LightGray" SnapsToDevicePixels="True"></Ellipse>
                </Grid>
            </VisualBrush.Visual>
        </VisualBrush>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--车辆段线条颜色-->
        <!--<SolidColorBrush x:Key="Shape.Line.Color" Color="#A95400"/>-->
        <SolidColorBrush x:Key="Shape.Line.Color" Color="#FF0000"/>



        <Style x:Key="SwitchStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.4*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="0.25*"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path x:Name="switchOpenShape" Stroke="Green" Fill="Green" Stretch="Fill" Grid.Column="0" Grid.ColumnSpan="2">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Union">
                                            <CombinedGeometry.Geometry1>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="7,0,2,4"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="4,3,8,1"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <RectangleGeometry Rect="7,6,2,9">
                                                                    <RectangleGeometry.Transform>
                                                                        <RotateTransform Angle="-39" CenterX="9" CenterY="17"/>
                                                                    </RectangleGeometry.Transform>
                                                                </RectangleGeometry>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <CombinedGeometry GeometryCombineMode="Exclude">
                                                                    <CombinedGeometry.Geometry1>
                                                                        <EllipseGeometry Center="8,18" RadiusX="3" RadiusY="3" />
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <EllipseGeometry Center="8,18" RadiusX="2" RadiusY="2" />
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry2>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="7,20,2,4"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="switchCloseShape" Stroke="Red" Fill="Red" Stretch="Fill" Visibility="Collapsed" HorizontalAlignment="Right" Grid.Column="1">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Union">
                                            <CombinedGeometry.Geometry1>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="7,0,2,4"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="4,3,8,1"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <RectangleGeometry Rect="7,4,2,11"/>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <CombinedGeometry GeometryCombineMode="Exclude">
                                                                    <CombinedGeometry.Geometry1>
                                                                        <EllipseGeometry Center="8,18" RadiusX="3" RadiusY="3" />
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <EllipseGeometry Center="8,18" RadiusX="2" RadiusY="2" />
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry2>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="7,20,2,4"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="switchOpenShape" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="switchCloseShape" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" TargetName="switchOpenShape" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="switchCloseShape" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GroundSwitchStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="0.125*"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path x:Name="switchOpenShape" Stroke="Gray" Fill="Gray" Stretch="Fill">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Union">
                                            <CombinedGeometry.Geometry1>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="7,0,2,4"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="4,3,8,1"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <CombinedGeometry>
                                                                    <CombinedGeometry.Geometry1>
                                                                        <RectangleGeometry Rect="7,6,2,7">
                                                                            <RectangleGeometry.Transform>
                                                                                <RotateTransform Angle="-50" CenterX="8" CenterY="14"/>
                                                                            </RectangleGeometry.Transform>
                                                                        </RectangleGeometry>
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                                                            <CombinedGeometry.Geometry1>
                                                                                <EllipseGeometry Center="8,16" RadiusX="3" RadiusY="3" />
                                                                            </CombinedGeometry.Geometry1>
                                                                            <CombinedGeometry.Geometry2>
                                                                                <EllipseGeometry Center="8,16" RadiusX="2" RadiusY="2" />
                                                                            </CombinedGeometry.Geometry2>
                                                                        </CombinedGeometry>
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <CombinedGeometry>
                                                                    <CombinedGeometry.Geometry1>
                                                                        <RectangleGeometry Rect="7,18,2,6"/>
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <RectangleGeometry Rect="2,23,12,1"/>
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry2>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <RectangleGeometry Rect="4,27,8,1"/>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <RectangleGeometry Rect="6,31,4,1"/>
                                                            </CombinedGeometry.Geometry2>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="switchCloseShape" Stroke="Red" Fill="Red" Stretch="Fill" Visibility="Collapsed">
                                    <Path.Data>
                                        <CombinedGeometry GeometryCombineMode="Union">
                                            <CombinedGeometry.Geometry1>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="7,0,2,4"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="4,3,8,1"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <CombinedGeometry>
                                                                    <CombinedGeometry.Geometry1>
                                                                        <RectangleGeometry Rect="7,4,2,10"/>
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <CombinedGeometry GeometryCombineMode="Exclude">
                                                                            <CombinedGeometry.Geometry1>
                                                                                <EllipseGeometry Center="8,16" RadiusX="3" RadiusY="3" />
                                                                            </CombinedGeometry.Geometry1>
                                                                            <CombinedGeometry.Geometry2>
                                                                                <EllipseGeometry Center="8,16" RadiusX="2" RadiusY="2" />
                                                                            </CombinedGeometry.Geometry2>
                                                                        </CombinedGeometry>
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <CombinedGeometry>
                                                                    <CombinedGeometry.Geometry1>
                                                                        <RectangleGeometry Rect="7,18,2,4"/>
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <RectangleGeometry Rect="2,23,12,1"/>
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry2>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <RectangleGeometry Rect="4,27,8,1"/>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <RectangleGeometry Rect="6,31,4,1"/>
                                                            </CombinedGeometry.Geometry2>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="switchOpenShape" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="switchCloseShape" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" TargetName="switchOpenShape" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="switchCloseShape" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CircuitBreakerStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="17"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Grid>
                                    <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Path x:Name="offPath" Stroke="#FF00FF00">
                                        <Path.Data>
                                            <RectangleGeometry Rect="0.5,0.5,15,23"/>
                                        </Path.Data>
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <GradientStop Color="#FF00FF00" Offset="0"/>
                                                <GradientStop Color="#9900FF00" Offset="0.8"/>
                                                <GradientStop Color="#DD00FF00" Offset="0.9"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path x:Name="onPath" Stroke="#FFFF0000" Visibility="Collapsed">
                                        <Path.Data>
                                            <RectangleGeometry Rect="0.5,0.5,15,23"/>
                                        </Path.Data>
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <GradientStop Color="#FFFF0000" Offset="0"/>
                                                <GradientStop Color="#99FF0000" Offset="0.8"/>
                                                <GradientStop Color="#DDFF0000" Offset="0.9"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>

                                </Grid>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="offPath" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="onPath" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="DropFuseStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path x:Name="switchOpenShape" Stroke="Green" Fill="Green" Grid.Column="1" Grid.ColumnSpan="2" Stretch="Fill">
                                    <Path.Data>
                                        <CombinedGeometry>
                                            <CombinedGeometry.Geometry1>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="3,0,2,4"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="0,3,8,1"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <CombinedGeometry GeometryCombineMode="Exclude">
                                                                    <CombinedGeometry.Geometry1>
                                                                        <RectangleGeometry Rect="0,9,8,9"/>
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <RectangleGeometry Rect="1,10,6,7"/>
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <RectangleGeometry Rect="3,6,2,15"/>
                                                            </CombinedGeometry.Geometry2>
                                                            <CombinedGeometry.Transform>
                                                                <RotateTransform CenterX="5" CenterY="20" Angle="42"/>
                                                            </CombinedGeometry.Transform>
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="3,20,2,4"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="switchCloseShape" Stroke="Red" Fill="Red" Grid.Column="1" Stretch="Fill" Visibility="Collapsed">
                                    <Path.Data>
                                        <CombinedGeometry>
                                            <CombinedGeometry.Geometry1>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <RectangleGeometry Rect="3,0,2,4"/>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="0,3,8,1"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry1>
                                            <CombinedGeometry.Geometry2>
                                                <CombinedGeometry>
                                                    <CombinedGeometry.Geometry1>
                                                        <CombinedGeometry>
                                                            <CombinedGeometry.Geometry1>
                                                                <CombinedGeometry GeometryCombineMode="Exclude">
                                                                    <CombinedGeometry.Geometry1>
                                                                        <RectangleGeometry Rect="0,9,8,9"/>
                                                                    </CombinedGeometry.Geometry1>
                                                                    <CombinedGeometry.Geometry2>
                                                                        <RectangleGeometry Rect="1,10,6,7"/>
                                                                    </CombinedGeometry.Geometry2>
                                                                </CombinedGeometry>
                                                            </CombinedGeometry.Geometry1>
                                                            <CombinedGeometry.Geometry2>
                                                                <RectangleGeometry Rect="3,4,2,17"/>
                                                            </CombinedGeometry.Geometry2>
                                                            <!--<CombinedGeometry.Transform>
                                                                <RotateTransform CenterX="5" CenterY="20" Angle="42"/>
                                                            </CombinedGeometry.Transform>-->
                                                        </CombinedGeometry>
                                                    </CombinedGeometry.Geometry1>
                                                    <CombinedGeometry.Geometry2>
                                                        <RectangleGeometry Rect="3,20,2,4"/>
                                                    </CombinedGeometry.Geometry2>
                                                </CombinedGeometry>
                                            </CombinedGeometry.Geometry2>
                                        </CombinedGeometry>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="switchOpenShape" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="switchCloseShape" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GroundLeadLightStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Grid>
                                    <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Grid x:Name="notConnectedView" Visibility="Visible">
                                        <Ellipse Fill="#FF8A8A8A" Stroke="Transparent"/>
                                        <Ellipse Fill="#FFBCBCBC" Stroke="Transparent" Width="12" Height="12" />
                                        <Ellipse Width="9" Height="9">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FFD2D2D2" Offset="0"/>
                                                    <GradientStop Color="#FF8B8B8B" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Ellipse Fill="#FF545454" Stroke="Transparent" Width="8" Height="8" />
                                        <Ellipse Width="4" Height="4">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FF4D4D4D" Offset="0"/>
                                                    <GradientStop Color="#FFB2B2B2" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>

                                    </Grid>
                                    <Grid x:Name="connectedView" Visibility="Collapsed">
                                        <Ellipse Fill="#FF8A8A8A" Stroke="Transparent"/>
                                        <Ellipse Fill="#FFFF0000" Stroke="Transparent" Width="12" Height="12" />
                                        <Ellipse Width="9" Height="9">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FFFBB2B2" Offset="0"/>
                                                    <GradientStop Color="#FFE03131" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Ellipse Fill="#FF800000" Stroke="Transparent" Width="8" Height="8" />
                                        <Ellipse Width="4" Height="4">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FFC71515" Offset="0"/>
                                                    <GradientStop Color="#FFF9AFAF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                    </Grid>
                                </Grid>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="notConnectedView" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="connectedView" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GroundLeadStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Canvas Width="12" Height="12">
                                    <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Canvas x:Name="notConnectedView" Width="12" Height="12" Visibility="Visible">
                                        <Ellipse Fill="#FF9E9E9E" Stroke="Transparent" Width="12" Height="12"/>
                                        <Ellipse Stroke="Transparent" Width="10" Height="10" Canvas.Left="0.996" Canvas.Top="0.996">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FFF5F5F5" Offset="0"/>
                                                    <GradientStop Color="#FF898989" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Line X1="0" Y1="0" X2="0" Y2="4" Stroke="#FF404040" StrokeThickness="1"  Canvas.Left="5.5" Canvas.Top="1" />
                                        <Line X1="0" Y1="0" X2="0" Y2="4" Stroke="#FF404040" StrokeThickness="1"  Canvas.Left="6.5" Canvas.Top="1" />
                                        <Line X1="0" Y1="0" X2="0" Y2="4" Stroke="Black" StrokeThickness="1"  Canvas.Left="6" Canvas.Top="1" />
                                        <Line X1="0" Y1="4" X2="8" Y2="4" Stroke="Black" Canvas.Left="2" Canvas.Top="1" />
                                        <Line X1="0" Y1="6" X2="5" Y2="6" Stroke="Black" Canvas.Left="3.582" Canvas.Top="1" />
                                        <Line X1="0" Y1="8" X2="2" Y2="8" Stroke="Black" Canvas.Left="5" Canvas.Top="1" />

                                    </Canvas>
                                    <Canvas x:Name="connectedView" Width="12" Height="12" Visibility="Collapsed">
                                        <Ellipse Fill="#FFFA0000" Stroke="Transparent" Width="12" Height="12"/>
                                        <Ellipse Stroke="Transparent" Width="10" Height="10" Canvas.Left="0.996" Canvas.Top="0.996">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#FFFFB5B5" Offset="0"/>
                                                    <GradientStop Color="#FFFF4D4D" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Line X1="0" Y1="0" X2="0" Y2="4" Stroke="#FF404040" StrokeThickness="1"  Canvas.Left="5.5" Canvas.Top="1" />
                                        <Line X1="0" Y1="0" X2="0" Y2="4" Stroke="#FF404040" StrokeThickness="1"  Canvas.Left="6.5" Canvas.Top="1" />
                                        <Line X1="0" Y1="0" X2="0" Y2="4" Stroke="Black" StrokeThickness="1"  Canvas.Left="6" Canvas.Top="1" />
                                        <Line X1="0" Y1="4" X2="8" Y2="4" Stroke="Black" Canvas.Left="2" Canvas.Top="1" />
                                        <Line X1="0" Y1="6" X2="5" Y2="6" Stroke="Black" Canvas.Left="3.582" Canvas.Top="1" />
                                        <Line X1="0" Y1="8" X2="2" Y2="8" Stroke="Black" Canvas.Left="5" Canvas.Top="1" />

                                    </Canvas>
                                </Canvas>

                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="notConnectedView" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="connectedView" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NetDoorStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Canvas Width="10" Height="14">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Canvas x:Name="closeedView" Width="10" Height="14" ClipToBounds="False" Visibility="Visible">
                                        <Rectangle Width="10" Height="14" Stroke="#FF008080">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush>
                                                    <GradientStop Offset="0" Color="#FFA7E9EA"/>
                                                    <GradientStop Offset="0" Color="#FF269CAD"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Line X1="0.3" Y1="0.3" X2="9.6" Y2="13.7" Stroke="#FF008080"/>
                                        <Line X1="9.6" Y1="0.3" X2="0.4" Y2="13.7" Stroke="#FF008080"/>
                                        <Line X1="5" Y1="0" X2="0" Y2="7" Stroke="Black"/>
                                        <Line X1="0" Y1="7" X2="5" Y2="14" Stroke="Black"/>
                                        <Line X1="5" Y1="14" X2="10" Y2="7" Stroke="Black"/>
                                        <Line X1="10" Y1="7" X2="5" Y2="0" Stroke="Black"/>
                                        <Rectangle Width="10" Height="14" Fill="Transparent"  Stroke="#FF008080"/>
                                    </Canvas>
                                    <Canvas x:Name="openedView" Width="10" Height="14" ClipToBounds="False" Visibility="Collapsed">
                                        <Rectangle Width="10" Height="14" Stroke="#FF5A5A5A">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush>
                                                    <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                                    <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Line X1="0.3" Y1="0.3" X2="9.7" Y2="13.7" Stroke="#FF8A8A8A"/>
                                        <Line X1="9.7" Y1="0.3" X2="0.3" Y2="13.7" Stroke="#FF8A8A8A"/>
                                        <Line X1="5" Y1="0" X2="0" Y2="7" Stroke="Black"/>
                                        <Line X1="0" Y1="7" X2="5" Y2="14" Stroke="Black"/>
                                        <Line X1="5" Y1="14" X2="10" Y2="7" Stroke="Black"/>
                                        <Line X1="10" Y1="7" X2="5" Y2="0" Stroke="Black"/>
                                        <Rectangle Width="10" Height="14" Fill="Transparent"  Stroke="#FFFF0000"/>

                                        <Rectangle Width="3" Height="14" Stroke="#FFFF0000">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Offset="0" Color="#FFFF5E5E"/>
                                                    <GradientStop Offset="1" Color="#FFFF0000"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.RenderTransform>
                                                <SkewTransform AngleX="0" AngleY="50"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>

                                        <Rectangle Width="3" Height="14" Stroke="#FFFF0000" Canvas.Left="9.9">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Offset="0" Color="#FFFF5E5E"/>
                                                    <GradientStop Offset="1" Color="#FFFF0000"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.RenderTransform>
                                                <TransformGroup>
                                                    <SkewTransform AngleX="0" AngleY="50"/>
                                                    <ScaleTransform ScaleX="-1" />
                                                </TransformGroup>

                                            </Rectangle.RenderTransform>
                                        </Rectangle>


                                    </Canvas>
                                </Canvas>

                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="closeedView" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="openedView" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TwoPhaseTransformerStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="44"/>
            <Setter Property="Height" Value="76"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Canvas Width="44" Height="76">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Ellipse Width="44" Height="44" Fill="Transparent" Stroke="#FFFF0000" StrokeThickness="2"/>
                                    <Path Data="M23,22.01 L23,10" Fill="Transparent" Height="13.76" Canvas.Left="20.25" Stretch="Fill" Stroke="#FFFF0000" StrokeThickness="2" Canvas.Top="10" Width="4"/>
                                    <Path Data="M21,24.01 L34,32.01" Fill="Transparent" Height="9.375" Canvas.Left="20.25" Stretch="Fill" Stroke="#FFFF0000" StrokeThickness="2" Canvas.Top="19.76" Width="12.75"/>
                                    <Path Data="M25,22.01 L13,32.01" Fill="Transparent" Height="9.375" Canvas.Left="11.125" Stretch="Fill" Stroke="#FFFF0000" StrokeThickness="2" Canvas.Top="19.76" Width="13.125"/>
                                    <Ellipse Width="44" Height="44" Fill="Transparent" Stroke="#FFA20000" StrokeThickness="2" Canvas.Top="31.76"/>
                                    <Path Data="M11.625,47.01 L11.5,59.759998 26.125,53.259998 z" Fill="Transparent" Height="16.75" Canvas.Left="18.497" Stretch="Fill" Stroke="#FFA20000" StrokeThickness="2" Canvas.Top="47.01" Width="12.5"/>
                                    <Ellipse Width="44" Height="44" Fill="Transparent" Stroke="#FFA20000" StrokeThickness="2" Canvas.Top="31.76"/>
                                    <Path Data="M11.625,47.01 L11.5,59.759998 26.125,53.259998 z" Fill="Transparent" Height="16.75" Canvas.Left="18.497" Stretch="Fill" Stroke="#FFA20000" StrokeThickness="2" Canvas.Top="47.01" Width="12.5"/>
                                </Canvas>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ThreePhaseTransformerStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="76"/>
            <Setter Property="Height" Value="76"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Canvas Width="76" Height="76">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Ellipse Width="44" Height="44" Fill="Transparent" Stroke="#FFFF0000" StrokeThickness="2"/>
                                    <Path Data="M23,22.01 L23,10" Fill="Transparent" Height="13.76" Canvas.Left="20.25" Stretch="Fill" Stroke="#FFFF0000" StrokeThickness="2" Canvas.Top="10" Width="4"/>
                                    <Path Data="M21,24.01 L34,32.01" Fill="Transparent" Height="9.375" Canvas.Left="20.25" Stretch="Fill" Stroke="#FFFF0000" StrokeThickness="2" Canvas.Top="19.76" Width="12.75"/>
                                    <Path Data="M25,22.01 L13,32.01" Fill="Transparent" Height="9.375" Canvas.Left="11.125" Stretch="Fill" Stroke="#FFFF0000" StrokeThickness="2" Canvas.Top="19.76" Width="13.125"/>
                                    <Ellipse Width="44" Height="44" Fill="Transparent" Stroke="#FFA20000" StrokeThickness="2" Canvas.Top="31.76"/>
                                    <Path Data="M11.625,47.01 L11.5,59.759998 26.125,53.259998 z" Fill="Transparent" Height="16.75" Canvas.Left="18.497" Stretch="Fill" Stroke="#FFA20000" StrokeThickness="2" Canvas.Top="47.01" Width="12.5"/>
                                    <Ellipse Width="44" Height="44" Fill="Transparent" Stroke="#FFC20000" StrokeThickness="2" Canvas.Top="15.758" Canvas.Left="32.333"/>
                                    <Path Data="M11.625,47.01 L11.5,59.759998 26.125,53.259998 z" Fill="Transparent" Height="16.75" Canvas.Left="50.513" Stretch="Fill" Stroke="#FFC20000" StrokeThickness="2" Canvas.Top="29.668" Width="12.5"/>
                                </Canvas>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PlatDoorStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Viewbox Stretch="Fill">
                                <Canvas Width="16" Height="16" Background="#FFC0C0C0">
                                    <Canvas x:Name="closeDoorView" Width="16" Height="16" Visibility="Collapsed">
                                        <Rectangle Height="16" Stroke="#FFC0C0C0" StrokeThickness="1.5" Width="16">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FFA1A1A1" Offset="1"/>
                                                    <GradientStop Color="#FFFAFAFA" Offset="0"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>

                                        <Rectangle Fill="Transparent" Width="12.038" Height="12.313" Stroke="#FF585858" StrokeThickness="0.5" Canvas.Left="2" Canvas.Top="1.812"/>
                                        <Rectangle Fill="Transparent" Height="5.134" Canvas.Left="4" Stroke="Black" Canvas.Top="5.627" Width="1"/>

                                    </Canvas>
                                    <Canvas x:Name="openDoorView" Width="16" Height="16" Visibility="Visible" >
                                        <Rectangle Height="16" Stroke="#FFFF0000" StrokeThickness="1.5" Width="16">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FFA1A1A1" Offset="1"/>
                                                    <GradientStop Color="#FFFAFAFA" Offset="0"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>

                                        <Rectangle Height="16" Stroke="#FFFF0000" StrokeThickness="1.5" Width="8" Canvas.Left="16">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FFFF7171" Offset="1"/>
                                                    <GradientStop Color="#FFFF0000" Offset="0.3"/>
                                                    <GradientStop Color="#FFFF0000" Offset="0"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.RenderTransform>
                                                <TransformGroup>
                                                    <SkewTransform AngleX="0" AngleY="30"/>
                                                    <ScaleTransform ScaleX="-1"/>
                                                </TransformGroup>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>

                                        <Rectangle Fill="Transparent" Height="5.134" Canvas.Left="10.25" Stroke="Black" Canvas.Top="8.752" Width="1"/>

                                        <Path Data="M-3.75,7.5625 L2,7.7505 1.9998121,6.3147656 5.124476,8.9397005 1.9998121,11.001757 2,9.6264226 -3.8125,9.6264226 z" Fill="Green" Height="5.688" Canvas.Left="-2.5" Stretch="Fill" Stroke="Green" Canvas.Top="6.437" Width="9.937"/>

                                    </Canvas>

                                </Canvas>

                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="closeDoorView"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="openDoorView"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Visible" TargetName="closeDoorView"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="openDoorView"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ElectricConfirmStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>

                                <Path x:Name="facePath" Stroke="Green" StrokeThickness="2" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <LineGeometry StartPoint="6,0" EndPoint="8,2"/>
                                            <LineGeometry StartPoint="8,2" EndPoint="4,2"/>
                                            <LineGeometry StartPoint="4,2" EndPoint="6,0"/>
                                            <LineGeometry StartPoint="6,2" EndPoint="6,5"/>
                                            <PathGeometry Figures="M0,8 A8,8,0,0,1,12,8"/>
                                            <LineGeometry StartPoint="1,7" EndPoint="3,8"/>
                                            <LineGeometry StartPoint="6,5" EndPoint="6,7"/>
                                            <LineGeometry StartPoint="11,7" EndPoint="9,8"/>

                                            <LineGeometry StartPoint="3,9" EndPoint="6,12"/>
                                            <EllipseGeometry Center="6,13" RadiusX="1" RadiusY="1"/>

                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>

                                <Path x:Name="pressedFacePath" Visibility="Collapsed" Stroke="Red" StrokeThickness="1" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <LineGeometry StartPoint="6,0" EndPoint="8,2"/>
                                            <LineGeometry StartPoint="8,2" EndPoint="4,2"/>
                                            <LineGeometry StartPoint="4,2" EndPoint="6,0"/>
                                            <LineGeometry StartPoint="6,2" EndPoint="6,5"/>
                                            <PathGeometry Figures="M0,8 A8,8,0,0,1,12,8"/>
                                            <LineGeometry StartPoint="1,7" EndPoint="3,8"/>
                                            <LineGeometry StartPoint="6,5" EndPoint="6,7"/>
                                            <LineGeometry StartPoint="11,7" EndPoint="9,8"/>

                                            <LineGeometry StartPoint="6,9" EndPoint="6,12"/>
                                            <EllipseGeometry Center="6,13" RadiusX="1" RadiusY="1"/>

                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="pressedFacePath" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="facePath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TrackIDStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="0,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Path Stroke="Orange" Fill="LightSeaGreen" StrokeThickness="2" Stretch="Fill" Data="M0,20 L15,0 L65,0 L80,20 L65,40 L15,40Z"/>
                                <ContentPresenter Visibility="Collapsed"  VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LineBreakerStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="21"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Black" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Stroke="Green" StrokeThickness="2" Stretch="Fill">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <LineGeometry StartPoint="0,0" EndPoint="0,30"/>
                                            <LineGeometry StartPoint="15,0" EndPoint="15,30"/>
                                            <LineGeometry StartPoint="30,0" EndPoint="30,30"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TrackLineStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="#A95400"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#A95400" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Stroke="#D17500" StrokeThickness="4" Stretch="Fill" Data="M0,0 L100,0" StrokeDashArray="4 3"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ArrowStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="9"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">

                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Fill="Red" Stroke="Red" Stretch="Fill" Data="M5,0 L9,6 L6,6 L6,8 L4,8 L4,6 L1,6Z"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ArrowEmptyStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="9"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">

                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Fill="Transparent" StrokeThickness="2" Stroke="Red" Stretch="Fill" Data="M5,0 L9,6 L6,6 L6,8 L4,8 L4,6 L1,6Z"/>
                            </Grid>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GroundLeadStaticStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Stroke="Red" Fill="Red" Stretch="Fill">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="7,0,2,4"/>
                                            <RectangleGeometry Rect="2,4,12,1"/>
                                            <RectangleGeometry Rect="4,8,8,1"/>
                                            <RectangleGeometry Rect="6,12,4,1"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LightningGroundLeadStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Stroke="Red" Fill="Red" Stretch="Fill">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="7,0,2,3"/>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="3,3,10,12"/>
                                                <RectangleGeometry Rect="4,4,8,10"/>
                                            </GeometryGroup>
                                            <PathGeometry Figures="M7,4 L7,9 6,9 8,12 10,9 9,9 9,4"/>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="7,15,2,5"/>
                                                <RectangleGeometry Rect="2,20,12,1"/>
                                                <RectangleGeometry Rect="4,24,8,1"/>
                                                <RectangleGeometry Rect="6,28,4,1"/>
                                            </GeometryGroup>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LightningGroundLead2Style" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Stroke="Red" Fill="Red" Stretch="Fill">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="7,0,2,4"/>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="4,4,8,12"/>
                                                <RectangleGeometry Rect="5,5,6,10"/>
                                            </GeometryGroup>
                                            <RectangleGeometry Rect="7.5,3,1,14">
                                                <RectangleGeometry.Transform>
                                                    <RotateTransform CenterX="8" CenterY="10" Angle="60"/>
                                                </RectangleGeometry.Transform>
                                            </RectangleGeometry>
                                            <RectangleGeometry Rect="1.5,13.5,1,2.4"/>
                                            <RectangleGeometry Rect="13.5,4,1,2.4"/>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="7,16,2,4"/>
                                                <RectangleGeometry Rect="2,20,12,1"/>
                                                <RectangleGeometry Rect="4,24,8,1"/>
                                                <RectangleGeometry Rect="6,28,4,1"/>
                                            </GeometryGroup>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ElectricCableStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path Stroke="Red" Stretch="Fill" StrokeThickness="2">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="7.5,0,1,2"/>
                                            <PathGeometry Figures="M7.5,8 L7.5,15 2,21 14,21 8.5,15 8.5,8 14,2 2,2 7.5,8"/>
                                            <RectangleGeometry Rect="7.5,21,1,2"/>
                                        </GeometryGroup>

                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Name="userControlGrid">
        <ScrollViewer  Name="drawCanvasParent" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <swc:ZoomableCanvas  Name="drawCanvas" Background="{StaticResource BackgroundVisualBrush}"  Focusable="True" IsVirtualizing="False" ClipToBounds="False" MouseLeftButtonDown="DrawCanvas_MouseLeftButtonDown" MouseMove="DrawCanvas_MouseMove" MouseLeftButtonUp="DrawCanvas_MouseLeftButtonUp" KeyDown="drawCanvas_KeyDown" MouseEnter="drawCanvas_MouseEnter" MouseLeave="drawCanvas_MouseLeave" SizeChanged="drawCanvas_SizeChanged">
            </swc:ZoomableCanvas>
        </ScrollViewer>
    </Grid>
</UserControl>
